---
# tasks file for install-nodejs

- getent:
    database: passwd
    key: "{{ user_to_install }}"
    split: ":"

- set_fact:
    user_to_install_home: "{{ getent_passwd[user_to_install][4] }}" 
- set_fact:
    node_install: "{{ user_to_install_home }}/.local/install/node"

- name: Print profile_files
  debug:
    msg: "Profile file {{ item }}"
  with_items: "{{ profile_files }}"

- debug:
    msg: "home: {{ user_to_install_home }}"

- name: Creates directory
  file: 
    path: "{{ node_install }}" 
    state: directory
    recurse: yes
    owner:  "{{ user_to_install }}"
    group:  "{{ user_to_install }}"
  become: yes  

- name: downloading {{ url_path }}/{{ file_name }}.tar.xz with checksum check
  get_url:
    url: "{{ url_path }}/{{ file_name }}.tar.xz"
    dest: "{{ user_to_install_home }}/{{ file_name }}.tar.xz"
    checksum: "{{ file_checksum }}"
  become: yes #required to downloads into users downloads folder as we don't have permissions.

# - name: Extract node.tar.xz into 
#   unarchive:
#     src: "{{ user_to_install_home }}/{{ file_name }}.tar.xz"
#     dest: '{{ user_to_install_home }}/ans'
#     #remote_src: false
#   become: yes
# #     #dest: "{{ node_install }}"

# I could not do touch step but I really like idea that in a shell you can do some stuff in multi steps and create a file meaning it is done. unarchive would be better as files of node js potentally could be changed or deleted. But it is very unlikely and ready to accept that minor risk  
- name: Extract node archive
  shell: |
    tar xf {{ user_to_install_home }}/{{ file_name }}.tar.xz -C {{ node_install }}
    touch {{ node_install }}/{{ file_name }}/nodejsextracted.txt 
  args:
    creates: "{{ node_install }}/{{ file_name }}/nodejsextracted.txt"
  become: yes

- name: make sure profile {{ item }} exists
  file:
    path: "{{ item }}"
    state: touch  
  become: yes
  with_items: "{{ profile_files }}"

- name: add export NODE_PATH in {{ item }}
  lineinfile: 
    dest: "{{ item }}"
    regexp: "^export NODE_PATH"
    line: "export NODE_PATH={{ node_install }}/{{ file_name }}/bin"
    state: present
  become: yes
  with_items: "{{ profile_files }}"    

- name: add NODE_PATH to PATH in {{ item }}
  lineinfile: #good example. regex & escaping $ character
    dest: "{{ item }}"
    regexp: "^export PATH=[$]NODE_PATH"
    line: "export PATH=$NODE_PATH:$PATH"
    state: present
  become: yes 
  with_items: "{{ profile_files }}"  

#this needed as without gathering facts again the changes which done above won't work.
#no restart required.
- name: Run setup to reevaluate values ansible_env.NODE_PATH
  setup:    
